// Generated by CoffeeScript 1.7.1
(function() {
  var wrapCallback;

  require('async-listener');

  wrapCallback = require('async-listener/glue');

  module.exports = function() {
    this.wrap = function(fn) {
      return wrapCallback(fn);
    };
    this.bridge = function(fn) {
      return function() {
        var index;
        index = arguments.length - 1;
        if (typeof arguments[index] === "function") {
          arguments[index] = wrapCallback(arguments[index]);
        }
        return fn.apply(this, arguments);
      };
    };
    this.bridgeRedisPackage = function(redis) {
      var fn;
      fn = redis.RedisClient.prototype.send_command;
      return redis.RedisClient.prototype.send_command = function(command, args, callback) {
        var index;
        if (Array.isArray(args)) {
          if (typeof callback === 'function') {
            callback = AsyncProfile.wrap(callback);
          } else if (!callback) {
            index = args.length - 1;
            if (typeof args[index] === "function") {
              args[index] = AsyncProfile.wrap(args[index]);
            }
          }
        }
        return fn.call(this, command, args, callback);
      };
    };
    return this.bridgeMongoDb = function(db) {
      db._executeInsertCommand = AsyncProfile.bridge(db._executeInsertCommand);
      db._executeQueryCommand = AsyncProfile.bridge(db._executeQueryCommand);
      db._executeUpdateCommand = AsyncProfile.bridge(db._executeUpdateCommand);
      return db._executeRemoveCommand = AsyncProfile.bridge(db._executeRemoveCommand);
    };
  };

}).call(this);
