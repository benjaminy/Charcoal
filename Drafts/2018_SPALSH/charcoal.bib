@inproceedings{Hong2014,
 author = {Hong, Shin and Park, Yongbae and Kim, Moonzoo},
 title = {Detecting Concurrency Errors in Client-Side Java Script Web Applications},
 booktitle = {Proceedings of the 2014 IEEE International Conference on Software Testing, Verification, and Validation},
 series = {ICST '14},
 year = {2014},
 isbn = {978-1-4799-2255-0},
 url = {http://dx.doi.org/10.1109/ICST.2014.17},
 doi = {10.1109/ICST.2014.17},
 acmid = {2624525},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {automated testing, concurrency bug, Java Script, web testing},
}

@InProceedings{Grossman2007,
  Title                    = {The Transactional Memory / Garbage Collection Analogy},
  Author                   = {Grossman, Dan},
  Booktitle                = {Proceedings of the 22Nd Annual ACM SIGPLAN Conference on Object-oriented Programming Systems and Applications},
  Year                     = {2007},
  Address                  = {New York, NY, USA},
  Publisher                = {ACM},
  Series                   = {OOPSLA '07},
  Acmid                    = {1297080},
  DOI                      = {10.1145/1297027.1297080},
  File                     = {:p695-grossman.pdf:PDF},
  ISBN                     = {978-1-59593-786-5},
  Keywords                 = {garbage collection, transactional memory},
  Location                 = {Montreal, Quebec, Canada},
}

@InProceedings{Herlihy1993,
  Title                    = {Transactional Memory: Architectural Support for Lock-free Data Structures},
  Author                   = {Herlihy, Maurice and Moss, J. Eliot B.},
  Booktitle                = {Proceedings of the 20th Annual International Symposium on Computer Architecture},
  Year                     = {1993},
  Address                  = {New York, NY, USA},
  Publisher                = {ACM},
  Series                   = {ISCA '93},
  Acmid                    = {165164},
  DOI                      = {10.1145/165123.165164},
  File                     = {:p289-herlihy.pdf:PDF},
  ISBN                     = {0-8186-3810-9},
  Location                 = {San Diego, California, USA},
}

@misc{Anastasopoulos2014,
author = {Agis Anastasopoulos},
title = {Contiguous stacks in Go},
journal = {agis.io},
type = {Blog},
number = {2014/03/25},
year = {2014},
howpublished = {\url{http://agis.io/2014/03/25/contiguous-stacks-in-go.html}}
}

@misc{Cheney2014,
author = {Dave Cheney},
title = {Five things that make Go fast},
journal = {The acme of foolishness},
type = {Blog},
number = {2014/6/7},
year = {2014},
howpublished = {\url{https://dave.cheney.net/2014/06/07/five-things-that-make-go-fast}}
}

@misc{Morsing2014,
author = {Daniel Morsing},
title = {How Stacks are Handled in Go},
journal = {Cloudflare Blog},
type = {Blog},
number = {2014/09/15},
year = {2014},
howpublished = {\url{https://blog.cloudflare.com/how-stacks-are-handled-in-go/}}
}

@misc{libuv2014,
author = {libuv Team},
title = {"pull based" event loop},
journal = {GitHub Issues},
year = {2014},
howpublished = {\url{https://github.com/libuv/libuv/issues/6}}
}

@InProceedings{Lu2008,
  Title                    = {Learning from mistakes: a comprehensive study on real world concurrency bug characteristics},
  Author                   = {Lu, Shan and Park, Soyeon and Seo, Eunsoo and Zhou, Yuanyuan},
  Booktitle                = {Proceedings of the 13th international conference on Architectural support for programming languages and operating systems},
  Year                     = {2008},
  Address                  = {New York, NY, USA},
  Publisher                = {ACM},
  Series                   = {ASPLOS XIII},
  Acmid                    = {1346323},
  DOI                      = {10.1145/1346281.1346323},
  File                     = {:p329-lu.pdf:PDF},
  ISBN                     = {978-1-59593-958-6},
  Keywords                 = {bug characteristics, concurrency bug, concurrent program},
  Location                 = {Seattle, WA, USA},
}

@InProceedings{Ousterhout1996,
  Title                    = {Why Threads Are A Bad Idea (for most purposes)},
  Author                   = {John Ousterhout},
  Booktitle                = {USENIX Technical Conference},
  Year                     = {1996},
}

@InProceedings{Adya2002,
  Title                    = {Cooperative Task Management Without Manual Stack Management},
  Author                   = {Adya, Atul and Howell, Jon and Theimer, Marvin and Bolosky, William J. and Douceur, John R.},
  Booktitle                = {Proceedings of the General Track of the annual conference on USENIX Annual Technical Conference},
  Year                     = {2002},
  Address                  = {Berkeley, CA, USA},
  Publisher                = {USENIX Association},
  Series                   = {ATEC '02},
  Abstract                 = {Cooperative task management can provide program architects with ease of reasoning about concurrency issues. This property is often espoused by those who recommend “event-driven” programming over “multi-threaded” programming. Those terms conflate several issues. In this paper, we clarify the issues, and show how one can get the best of both worlds: reason more simply about concurrency in the way “event-driven” advocates recommend, while preserving the readability and maintainability of code associated with “multithreaded” programming. We identify the source of confusion about the two programming styles as a conflation of two concepts: task management and stack management. Those two concerns define a two-axis space in which “multithreaded” and “event-driven” programming are diagonally opposite; there is a third “sweet spot” in the space that combines the advantages of both programming styles. We point out pitfalls in both alternative forms of stack management, manual and automatic, and we supply techniques that mitigate the danger in the automatic case. Finally, we exhibit adaptors that enable automatic stack management code and manual stack management code to interoperate in the same code base.},
  Acmid                    = {713851},
  File                     = {:ActualPapers/usenix2002-fibers.pdf:PDF},
  ISBN                     = {1-880446-00-6},
}

@InProceedings{Behren2003a,
  Title                    = {Why Events Are a Bad Idea (for High-concurrency Servers)},
  Author                   = {von Behren, Rob and Condit, Jeremy and Brewer, Eric},
  Booktitle                = {Proceedings of the 9th Conference on Hot Topics in Operating Systems - Volume 9},
  Year                     = {2003},
  Address                  = {Berkeley, CA, USA},
  Publisher                = {USENIX Association},
  Series                   = {HOTOS'03},
  Acmid                    = {1251058},
  Location                 = {Lihue, Hawaii},
}

@inproceedings{Loring2017,
 author = {Loring, Matthew C. and Marron, Mark and Leijen, Daan},
 title = {Semantics of Asynchronous JavaScript},
 booktitle = {Proceedings of the 13th ACM SIGPLAN International Symposium on on Dynamic Languages},
 series = {DLS 2017},
 year = {2017},
 isbn = {978-1-4503-5526-1},
 location = {Vancouver, BC, Canada},
 doi = {10.1145/3133841.3133846},
 acmid = {3133846},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Asynchrony, JavaScript},
}

@Online{Windows8Team2012,
  author = {Windows 8 Team},
  title  = {Keeping apps fast and fluid with asynchrony in the Windows Runtime},
  year   = {2012},
  url    = {https://blogs.msdn.microsoft.com/windowsappdev/2012/03/20/keeping-apps-fast-and-fluid-with-asynchrony-in-the-windows-runtime/},
}

@InProceedings{Petrov2012,
  author    = {Petrov, Boris and Vechev, Martin and Sridharan, Manu and Dolby, Julian},
  title     = {Race Detection for Web Applications},
  booktitle = {Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design and Implementation},
  year      = {2012},
  series    = {PLDI '12},
  publisher = {ACM},
  location  = {Beijing, China},
  isbn      = {978-1-4503-1205-9},
  doi       = {10.1145/2254064.2254095},
  acmid     = {2254095},
  address   = {New York, NY, USA},
  keywords  = {asynchrony, concurrency, data race, non determinism, web analysis},
}

@InProceedings{Hsiao2014,
  author    = {Hsiao, Chun-Hung and Yu, Jie and Narayanasamy, Satish and Kong, Ziyun and Pereira, Cristiano L. and Pokam, Gilles A. and Chen, Peter M. and Flinn, Jason},
  title     = {Race Detection for Event-driven Mobile Applications},
  booktitle = {Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  year      = {2014},
  series    = {PLDI '14},
  publisher = {ACM},
  location  = {Edinburgh, United Kingdom},
  isbn      = {978-1-4503-2784-8},
  doi       = {10.1145/2594291.2594330},
  acmid     = {2594330},
  address   = {New York, NY, USA},
  keywords  = {Android, causality model, concurrency, event-driven, mobile application, race detection, use-free race},
}

@inproceedings{Mutlu2014,
 author = {Mutlu, Erdal and Tasiran, Serdar and Livshits, Benjamin},
 title = {I Know It When I See It: Observable Races in JavaScript Applications},
 booktitle = {Proceedings of the Workshop on Dynamic Languages and Applications},
 series = {Dyla'14},
 year = {2014},
 isbn = {978-1-4503-2916-3},
 location = {Edinburgh, United Kingdom},
 url = {http://doi.acm.org/10.1145/2617548.2617549},
 doi = {10.1145/2617548.2617549},
 acmid = {2617549},
 address = {New York, NY, USA},
}

@InProceedings{Mutlu2015,
  author    = {Mutlu, Erdal and Tasiran, Serdar and Livshits, Benjamin},
  title     = {Detecting JavaScript Races That Matter},
  booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  year      = {2015},
  series    = {ESEC/FSE 2015},
  publisher = {ACM},
  location  = {Bergamo, Italy},
  isbn      = {978-1-4503-3675-8},
  doi       = {10.1145/2786805.2786820},
  acmid     = {2786820},
  address   = {New York, NY, USA},
  keywords  = {JavaScript, asynchrony, non-determinism, race detection},
}

@inproceedings{Zhang2017,
 author = {Zhang, Lu and Wang, Chao},
 title = {RClassify: Classifying Race Conditions in Web Applications via Deterministic Replay},
 booktitle = {Proceedings of the 39th International Conference on Software Engineering},
 series = {ICSE '17},
 year = {2017},
 isbn = {978-1-5386-3868-2},
 location = {Buenos Aires, Argentina},
 doi = {10.1109/ICSE.2017.33},
 acmid = {3097402},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}

@InProceedings{Davis2017,
  author    = {Davis, James and Thekumparampil, Arun and Lee, Dongyoon},
  title     = {Node.Fz: Fuzzing the Server-Side Event-Driven Architecture},
  booktitle = {Proceedings of the Twelfth European Conference on Computer Systems},
  year      = {2017},
  series    = {EuroSys '17},
  publisher = {ACM},
  location  = {Belgrade, Serbia},
  isbn      = {978-1-4503-4938-3},
  doi       = {10.1145/3064176.3064188},
  acmid     = {3064188},
  address   = {New York, NY, USA},
}

@inproceedings{Wang2017,
 author = {Wang, Jie and Dou, Wensheng and Gao, Yu and Gao, Chushu and Qin, Feng and Yin, Kang and Wei, Jun},
 title = {A Comprehensive Study on Real World Concurrency Bugs in Node.Js},
 booktitle = {Proceedings of the 32Nd IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE 2017},
 year = {2017},
 isbn = {978-1-5386-2684-9},
 location = {Urbana-Champaign, IL, USA},
 acmid = {3155628},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {JavaScript, Node.js, concurrency bug, empirical study, event-driven},
}

@inproceedings{Pankratius2011,
 author = {Pankratius, Victor and Adl-Tabatabai, Ali-Reza},
 title = {A Study of Transactional Memory vs. Locks in Practice},
 booktitle = {Proceedings of the Twenty-third Annual ACM Symposium on Parallelism in Algorithms and Architectures},
 series = {SPAA '11},
 year = {2011},
 isbn = {978-1-4503-0743-7},
 location = {San Jose, California, USA},
 doi = {10.1145/1989493.1989500},
 acmid = {1989500},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {transactional memory},
}

@Article{Pankratius2014,
  Title                    = {Software Engineering with Transactional Memory Versus Locks in Practice},
  Author                   = {Pankratius, Victor and Adl-Tabatabai, Ali-Reza},
  Journal                  = {Theor. Comp. Sys.},
  Year                     = {2014},
  Month                    = oct,
  Number                   = {3},
  Volume                   = {55},
  Acmid                    = {2664097},
  Address                  = {Secaucus, NJ, USA},
  DOI                      = {10.1007/s00224-013-9452-5},
  ISSN                     = {1432-4350},
  Issue_date               = {October 2014},
  Keywords                 = {Human factors, Language design, Parallel programming, Programming techniques, Synchronization, Transactional memory},
  Publisher                = {Springer-Verlag New York, Inc.},
}

@InProceedings{Moore2008,
  author    = {Moore, Katherine F. and Grossman, Dan},
  title     = {High-level Small-step Operational Semantics for Transactions},
  booktitle = {Proceedings of the 35th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  year      = {2008},
  series    = {POPL '08},
  publisher = {ACM},
  location  = {San Francisco, California, USA},
  isbn      = {978-1-59593-689-9},
  doi       = {10.1145/1328438.1328448},
  acmid     = {1328448},
  address   = {New York, NY, USA},
  file      = {:ActualPapers/p51-moore.pdf:PDF},
  keywords  = {isolation, operational semantics, parallelism, strong atomicity, transactional memory, weak atomicity},
}

@inproceedings{Vilk2014,
 author = {Vilk, John and Berger, Emery D.},
 title = {Doppio: Breaking the Browser Language Barrier},
 booktitle = {Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '14},
 year = {2014},
 isbn = {978-1-4503-2784-8},
 location = {Edinburgh, United Kingdom},
 doi = {10.1145/2594291.2594293},
 acmid = {2594293},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {JVM, JavaScript, browsers, operating systems, programming languages, web},
}

@InProceedings{Harris2005,
  Title                    = {Composable Memory Transactions},
  Author                   = {Harris, Tim and Marlow, Simon and Peyton-Jones, Simon and Herlihy, Maurice},
  Booktitle                = {Proceedings of the Tenth ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
  Year                     = {2005},
  Address                  = {New York, NY, USA},
  Publisher                = {ACM},
  Series                   = {PPoPP '05},
  Acmid                    = {1065952},
  DOI                      = {10.1145/1065944.1065952},
  File                     = {:p48-harris.pdf:PDF},
  ISBN                     = {1-59593-080-9},
  Keywords                 = {locks, non-blocking algorithms, transactions},
  Location                 = {Chicago, IL, USA},
}

@InProceedings{Ringenburg2005,
  author    = {Ringenburg, Michael F. and Grossman, Dan},
  title     = {AtomCaml: First-class Atomicity via Rollback},
  booktitle = {Proceedings of the Tenth ACM SIGPLAN International Conference on Functional Programming},
  year      = {2005},
  series    = {ICFP '05},
  publisher = {ACM},
  location  = {Tallinn, Estonia},
  isbn      = {1-59593-064-7},
  doi       = {10.1145/1086365.1086378},
  acmid     = {1086378},
  address   = {New York, NY, USA},
  file      = {:atomcaml_icfp.pdf:PDF},
  keywords  = {atomicity, concurrent programming, objective caml, transactions},
}

@inproceedings{Herlihy2006,
 author = {Herlihy, Maurice and Luchangco, Victor and Moir, Mark},
 title = {A Flexible Framework for Implementing Software Transactional Memory},
 booktitle = {Proceedings of the 21st Annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, and Applications},
 series = {OOPSLA '06},
 year = {2006},
 isbn = {1-59593-348-4},
 location = {Portland, Oregon, USA},
 doi = {10.1145/1167473.1167495},
 acmid = {1167495},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Java library, atomicity, concurrency, obstruction-free factory, shadow factory, software transactional memory (STM), transactions},
}

@inproceedings{Ni2008,
 author = {Ni, Yang and Welc, Adam and Adl-Tabatabai, Ali-Reza and Bach, Moshe and Berkowits, Sion and Cownie, James and Geva, Robert and Kozhukow, Sergey and Narayanaswamy, Ravi and Olivier, Jeffrey and Preis, Serguei and Saha, Bratin and Tal, Ady and Tian, Xinmin},
 title = {Design and Implementation of Transactional Constructs for C/C++},
 booktitle = {Proceedings of the 23rd ACM SIGPLAN Conference on Object-oriented Programming Systems Languages and Applications},
 series = {OOPSLA '08},
 year = {2008},
 isbn = {978-1-60558-215-3},
 location = {Nashville, TN, USA},
 doi = {10.1145/1449764.1449780},
 acmid = {1449780},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {C/C++, transactional memory},
}

@InProceedings{Abadi2009,
  Title                    = {A Model of Cooperative Threads},
  Author                   = {Abadi, Martin and Plotkin, Gordon},
  Booktitle                = {Proceedings of the 36th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  Year                     = {2009},
  Address                  = {New York, NY, USA},
  Publisher                = {ACM},
  Series                   = {POPL '09},
  Acmid                    = {1480887},
  DOI                      = {10.1145/1480881.1480887},
  File                     = {:popl065-abadi.pdf:PDF},
  ISBN                     = {978-1-60558-379-2},
  Keywords                 = {denotational semantics, monad, operational semantics, transaction},
  Location                 = {Savannah, GA, USA},
}

@InProceedings{Krohn2007,
  Title                    = {Events can make sense},
  Author                   = {Krohn, Maxwell and Kohler, Eddie and Kaashoek, M. Frans},
  Booktitle                = {2007 USENIX Annual Technical Conference on Proceedings of the USENIX Annual Technical Conference},
  Year                     = {2007},
  Address                  = {Berkeley, CA, USA},
  Publisher                = {USENIX Association},
  Series                   = {ATC'07},
  Abstract                 = {Tame is a new event-based system for managing concurrency in network applications. Code written with Tame abstractions does not suffer from the “stack-ripping” problem associated with other event libraries. Like threaded code, tamed code uses standard control flow, automatically-managed local variables, and modular interfaces between callers and callees. Tame’s implementation consists of C++ libraries and a source-to-source translator; no platform-specific support or compiler modifications are required, and Tame induces little runtime overhead. Experience with Tame in real-world systems, including a popular commercial Web site, suggests it is easy to adopt and deploy.},
  Acmid                    = {1364392},
  File                     = {:ActualPapers/tame-usenix07.pdf:PDF},
  ISBN                     = {999-8888-77-6},
  Location                 = {Santa Clara, CA},
}

@Article{Shao2000,
  Title                    = {Efficient and Safe-for-space Closure Conversion},
  Author                   = {Shao, Zhong and Appel, Andrew W.},
  Journal                  = {ACM Trans. Program. Lang. Syst.},
  Year                     = {2000},
  Month                    = jan,
  Number                   = {1},
  Volume                   = {22},
  Acmid                    = {345125},
  Address                  = {New York, NY, USA},
  DOI                      = {10.1145/345099.345125},
  File                     = {:escc.pdf:PDF},
  ISSN                     = {0164-0925},
  Issue_date               = {Jan. 2000},
  Keywords                 = {callee-save registers, closure conversion, closure representation, compiler optimization, flow analysis, heap-based compilation, space safety},
  Publisher                = {ACM},
}

@Online{Anderson2013,
  Title                    = {Abandoning segmented stacks in Rust},
  Author                   = {Brian Anderson},
  HowPublished             = {rust-dev mailing list},
  Month                    = {November},
  Year                     = {2013},
}

@InProceedings{Dean1995,
  Title                    = {Optimization of Object-Oriented Programs Using Static Class Hierarchy Analysis},
  Author                   = {Dean, Jeffrey and Grove, David and Chambers, Craig},
  Booktitle                = {Proceedings of the 9th European Conference on Object-Oriented Programming},
  Year                     = {1995},
  Address                  = {London, UK, UK},
  Publisher                = {Springer-Verlag},
  Series                   = {ECOOP '95},
  Acmid                    = {679523},
  File                     = {:dean-grove-chambers-ecoop95.pdf:PDF},
  ISBN                     = {3-540-60160-0},
}

@InProceedings{Necula2002,
  Title                    = {CIL: Intermediate Language and Tools for Analysis and Transformation of C Programs},
  Author                   = {Necula, George C. and McPeak, Scott and Rahul, Shree Prakash and Weimer, Westley},
  Booktitle                = {Proceedings of the 11th International Conference on Compiler Construction},
  Year                     = {2002},
  Address                  = {London, UK, UK},
  Publisher                = {Springer-Verlag},
  Series                   = {CC '02},
  Acmid                    = {727796},
  File                     = {:cil_cc02.pdf:PDF},
  ISBN                     = {3-540-43369-4},
}

@InProceedings{Boudol2007,
  Title                    = {Fair Cooperative Multithreading: Typing Termination in a Higher-order Concurrent Imperative Language},
  Author                   = {Boudol, G{\'e}rard},
  Booktitle                = {Proceedings of the 18th International Conference on Concurrency Theory},
  Year                     = {2007},
  Address                  = {Berlin, Heidelberg},
  Publisher                = {Springer-Verlag},
  Series                   = {CONCUR'07},
  Acmid                    = {2392221},
  File                     = {:fcm.pdf:PDF},
  ISBN                     = {3-540-74406-1, 978-3-540-74406-1},
  Location                 = {Lisbon, Portugal},
}

@InProceedings{ONeill2015,
  Title                    = {Making Impractical Implementations Practical: Observationally Cooperative Multithreading Using HLE},
  Author                   = {Melissa E. O'Neill and Christopher A. Stone},
  Booktitle                = {Proceedings of the 10th ACM SIGPLAN Workshop on Transactional Computing},
  Year                     = {2015},
  Month                    = {June},
  File                     = {:oneill-transact-2015.pdf:PDF},
}

@Article{Boussinot2006,
  Title                    = {FairThreads: Mixing Cooperative and Preemptive Threads in C: Research Articles},
  Author                   = {Boussinot, Fr{\'e}d{\'e}ric},
  Journal                  = {Concurr. Comput. : Pract. Exper.},
  Year                     = {2006},
  Month                    = apr,
  Number                   = {5},
  Volume                   = {18},
  Acmid                    = {1123317},
  Address                  = {Chichester, UK},
  DOI                      = {10.1002/cpe.v18:5},
  ISSN                     = {1532-0626},
  Issue_date               = {April 2006},
  Keywords                 = {C language, concurrency, multiprocessor, parallelism, reactive programming, thread},
  Publisher                = {John Wiley and Sons Ltd.},
}

@InProceedings{Dabrowski2006,
  Title                    = {Cooperative Threads and Preemptive Computations},
  Author                   = {Fr\'{e}d\'{e}ric Dabrowski and Fr\'{e}d\'{e}ric Boussinot},
  Booktitle                = {in Proceedings of TV'06, Multithreading in Hardware and Software: Formal Approaches to Design and Verification},
  Year                     = {2006},
}
