\begin{thebibliography}{10}

\bibitem{Abadi2009}
M.~Abadi and G.~Plotkin.
\newblock A Model of Cooperative Threads.
\newblock In {\em Proceedings of the 36th Annual ACM SIGPLAN-SIGACT Symposium
  on Principles of Programming Languages}, POPL, 2009.

\bibitem{Adya2002}
A.~Adya, J.~Howell, M.~Theimer, W.~J. Bolosky, and J.~R. Douceur.
\newblock Cooperative Task Management without Manual Stack Management.
\newblock In {\em Proceedings of the General Track of the annual conference on
  USENIX Annual Technical Conference}, ATEC, 2002.

\bibitem{Anderson2013}
B.~Anderson.
\newblock Abandoning Segmented Stacks in Rust.
\newblock rust-dev mailing list, November 2013.

\bibitem{Boehm2011}
H.-J. Boehm.
\newblock How to Miscompile Programs with ``Benign'' Data Races.
\newblock In {\em Proceedings of the 3rd USENIX Conference on Hot Topic in
  Parallelism}, HotPar, 2011.

\bibitem{Boudol2007}
G.~Boudol.
\newblock Fair Cooperative Multithreading: Typing Termination in a Higher-order
  Concurrent Imperative Language.
\newblock In {\em Proceedings of the 18th International Conference on Concurrency Theory}, CONCUR, 2007.

\bibitem{Boussinot2006}
F.~Boussinot.
\newblock Fairthreads: Mixing Cooperative and Preemptive Threads in C: Research
  Articles.
\newblock {\em Concurrency and Computation : Practice and Experience}, 18(5):445--469, Apr. 2006.

\bibitem{Cunningham2005}
R.~Cunningham and E.~Kohler.
\newblock Making Events Less Slippery with Eel.
\newblock In {\em Proceedings of the 10th conference on Hot Topics in Operating
  Systems - Volume 10}, HOTOS'05, 2005.

\bibitem{Dabrowski2006}
F.~Dabrowski and F.~Boussinot.
\newblock Cooperative Threads and Preemptive Computations.
\newblock In {\em in \&quot;Proceedings of TV’06, Multithreading in Hardware
  and Software: Formal Approaches to Design and Verification}, 2006.

\bibitem{Dean1995}
J.~Dean, D.~Grove, and C.~Chambers.
\newblock Optimization of Object-Oriented Programs using Static Class Hierarchy
  Analysis.
\newblock In {\em Proceedings of the 9th European Conference on Object-Oriented
  Programming}, ECOOP, 1995.

\bibitem{Fischer2007}
J.~Fischer, R.~Majumdar, and T.~Millstein.
\newblock Tasks: Language Support for Event-Driven Programming.
\newblock In {\em Proceedings of the 2007 ACM SIGPLAN symposium on Partial
  evaluation and semantics-based program manipulation}, PEPM, 2007.

\bibitem{Grossman2007}
D.~Grossman.
\newblock The Transactional Memory / Garbage Collection Analogy.
\newblock In {\em Proceedings of the 22Nd Annual ACM SIGPLAN Conference on
  Object-oriented Programming Systems and Applications}, OOPSLA, 2007.

\bibitem{Harris2005}
T.~Harris, S.~Marlow, S.~Peyton-Jones, and M.~Herlihy.
\newblock Composable Memory Transactions.
\newblock In {\em Proceedings of the Tenth ACM SIGPLAN Symposium on Principles
  and Practice of Parallel Programming}, PPoPP, 2005.

\bibitem{Kerneis2013}
G.~Kerneis.
\newblock {\em Continuation-Passing C: Program Transformations for Compiling
  Concurrency in an Imperative Language}.
\newblock PhD thesis, Université Paris Diderot – Paris 7, 2013.

\bibitem{Kerneis2014}
G.~Kerneis, C.~Shepherd, and S.~Hajnoczi.
\newblock Qemu/cpc: Static Analysis and CPS Conversion for Safe, Portable, and
  Efficient Coroutines.
\newblock In {\em Proceedings of the ACM SIGPLAN 2014 Workshop on Partial
  Evaluation and Program Manipulation}, PEPM, 2014.

\bibitem{Krohn2007}
M.~Krohn, E.~Kohler, and M.~F. Kaashoek.
\newblock Events Can Make Sense.
\newblock In {\em 2007 USENIX Annual Technical Conference on Proceedings of the
  USENIX Annual Technical Conference}, ATC, 2007.

\bibitem{Li2007}
P.~Li and S.~Zdancewic.
\newblock Combining Events and Threads for Scalable Network Services
  Implementation and Evaluation of Monadic, Application-Level Concurrency
  Primitives.
\newblock In {\em Proceedings of the 2007 ACM SIGPLAN conference on Programming
  language design and implementation}, PLDI, 2007.

\bibitem{Lu2008}
S.~Lu, S.~Park, E.~Seo, and Y.~Zhou.
\newblock Learning from Mistakes: A Comprehensive Study on Real World
  Concurrency Bug Characteristics.
\newblock In {\em Proceedings of the 13th international conference on
  Architectural support for programming languages and operating systems},
  ASPLOS XIII, 2008.

\bibitem{Necula2002}
G.~C. Necula, S.~McPeak, S.~P. Rahul, and W.~Weimer.
\newblock Cil: Intermediate Language and Tools for Analysis and Transformation
  of C Programs.
\newblock In {\em Proceedings of the 11th International Conference on Compiler
  Construction}, CC, 2002.

\bibitem{Ousterhout1996}
J.~Ousterhout.
\newblock Why Threads are a Bad Idea (for Most Purposes).
\newblock In {\em USENIX Technical Conference}, 1996.

\bibitem{ONeill2015}
M.~E. O’Neill and C.~A. Stone.
\newblock Making Impractical Implementations Practical: Observationally
  Cooperative Multithreading Using HLE.
\newblock In {\em Proceedings of the 10th ACM SIGPLAN Workshop on Transactional
  Computing}, June 2015.

\bibitem{Pankratius2014}
V.~Pankratius and A.-R. Adl-Tabatabai.
\newblock A Study of Transactional Memory vs. Locks in Practice.
\newblock {\em Proceedings of the twenty-third annual ACM symposium on Parallelism in algorithms and architectures}, SPAA, 2011.

\bibitem{Shao2000}
Z.~Shao and A.~W. Appel.
\newblock Efficient and Safe-for-Space Closure Conversion.
\newblock {\em ACM Transactions on Programming Languages and Systems}, TOPLAS, 2000.

\bibitem{Singh2012}
A.~Singh, S.~Narayanasamy, D.~Marino, T.~Millstein, and M.~Musuvathi.
\newblock End-to-End Sequential Consistency.
\newblock In {\em Proceedings of the 39th Annual International Symposium on
  Computer Architecture}, ISCA, 2012.

\bibitem{Behren2003a}
R.~von Behren, J.~Condit, and E.~Brewer.
\newblock Why Events are a Bad Idea (for High-Concurrency Servers).
\newblock In {\em Proceedings of the 9th Conference on Hot Topics in Operating
  Systems - Volume 9}, HOTOS, 2003.

\bibitem{Behren2003}
R.~von Behren, J.~Condit, F.~Zhou, G.~C. Necula, and E.~Brewer.
\newblock Capriccio: Scalable Threads for Internet Services.
\newblock In {\em Proceedings of the nineteenth ACM symposium on Operating
  systems principles}, SOSP, 2003.

\bibitem{Windows8Team2012}
{Windows 8 Team}.
\newblock Keeping Apps Fast and Fluid with Asynchrony in the Windows Runtime.
\newblock Microsoft Developer Blog, 2012.

\end{thebibliography}
