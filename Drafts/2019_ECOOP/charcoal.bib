@InProceedings{Ousterhout1996,
  Title                    = {Why Threads Are A Bad Idea (for most purposes)},
  Author                   = {John Ousterhout},
  Booktitle                = {USENIX Technical Conference},
  Year                     = {1996},
  Owner                    = {ben8},
  Timestamp                = {2015.10.16}
}

@InProceedings{Behren2003a,
  Title                    = {Why Events Are a Bad Idea (for High-concurrency Servers)},
  Author                   = {von Behren, Rob and Condit, Jeremy and Brewer, Eric},
  Booktitle                = {Proceedings of the 9th Conference on Hot Topics in Operating Systems - Volume 9},
  Year                     = {2003},
  Address                  = {Berkeley, CA, USA},
  Pages                    = {4--4},
  Publisher                = {USENIX Association},
  Series                   = {HOTOS'03},
  Acmid                    = {1251058},
  Location                 = {Lihue, Hawaii},
  Numpages                 = {1},
  Owner                    = {ben8},
  Timestamp                = {2015.09.25},
  URL                      = {http://dl.acm.org/citation.cfm?id=1251054.1251058}
}

@InProceedings{Lu2008,
  Title                    = {Learning from mistakes: a comprehensive study on real world concurrency bug characteristics},
  Author                   = {Lu, Shan and Park, Soyeon and Seo, Eunsoo and Zhou, Yuanyuan},
  Booktitle                = {Proceedings of the 13th international conference on Architectural support for programming languages and operating systems},
  Year                     = {2008},
  Address                  = {New York, NY, USA},
  Pages                    = {329--339},
  Publisher                = {ACM},
  Series                   = {ASPLOS XIII},
  Acmid                    = {1346323},
  DOI                      = {10.1145/1346281.1346323},
  File                     = {:p329-lu.pdf:PDF},
  ISBN                     = {978-1-59593-958-6},
  Keywords                 = {bug characteristics, concurrency bug, concurrent program},
  Location                 = {Seattle, WA, USA},
  Numpages                 = {11},
  Owner                    = {ben8},
  Timestamp                = {2013.11.10},
  URL                      = {http://doi.acm.org/10.1145/1346281.1346323}
}

@InProceedings{Adya2002,
  Title                    = {Cooperative Task Management Without Manual Stack Management},
  Author                   = {Adya, Atul and Howell, Jon and Theimer, Marvin and Bolosky, William J. and Douceur, John R.},
  Booktitle                = {Proceedings of the General Track of the annual conference on USENIX Annual Technical Conference},
  Year                     = {2002},
  Address                  = {Berkeley, CA, USA},
  Pages                    = {289--302},
  Publisher                = {USENIX Association},
  Series                   = {ATEC '02},
  Abstract                 = {Cooperative task management can provide program architects with ease of reasoning about concurrency issues. This property is often espoused by those who recommend “event-driven” programming over “multi-threaded” programming. Those terms conflate several issues. In this paper, we clarify the issues, and show how one can get the best of both worlds: reason more simply about concurrency in the way “event-driven” advocates recommend, while preserving the readability and maintainability of code associated with “multithreaded” programming. We identify the source of confusion about the two programming styles as a conflation of two concepts: task management and stack management. Those two concerns define a two-axis space in which “multithreaded” and “event-driven” programming are diagonally opposite; there is a third “sweet spot” in the space that combines the advantages of both programming styles. We point out pitfalls in both alternative forms of stack management, manual and automatic, and we supply techniques that mitigate the danger in the automatic case. Finally, we exhibit adaptors that enable automatic stack management code and manual stack management code to interoperate in the same code base.},
  Acmid                    = {713851},
  File                     = {:ActualPapers/usenix2002-fibers.pdf:PDF},
  ISBN                     = {1-880446-00-6},
  Numpages                 = {14},
  Owner                    = {ben8},
  Timestamp                = {2012.09.19},
  URL                      = {http://dl.acm.org/citation.cfm?id=647057.713851}
}

@Online{Pressler2017,
  author = {Ron Pressler and Alan Bateman},
  title  = {Project Loom: Fibers and Continuations for the Java Virtual Machine},
  year   = {2017},
  date   = {2017-09-26},
  url    = {http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html},
}

@Article{Conway1963,
  author     = {Conway, Melvin E.},
  title      = {Design of a Separable Transition-diagram Compiler},
  journal    = {Communications of the ACM},
  year       = {1963},
  volume     = {6},
  number     = {7},
  month      = jul,
  pages      = {396--408},
  issn       = {0001-0782},
  doi        = {10.1145/366663.366704},
  url        = {http://doi.acm.org/10.1145/366663.366704},
  acmid      = {366704},
  address    = {New York, NY, USA},
  file       = {:p396-conway.pdf:PDF},
  issue_date = {July 1963},
  numpages   = {13},
  publisher  = {ACM},
}

@Article{Felleisen1992,
  author     = {Felleisen, Matthias and Hieb, Robert},
  title      = {The Revised Report on the Syntactic Theories of Sequential Control and State},
  journal    = {Theor. Comput. Sci.},
  year       = {1992},
  volume     = {103},
  number     = {2},
  month      = sep,
  pages      = {235--271},
  issn       = {0304-3975},
  doi        = {10.1016/0304-3975(92)90014-7},
  url        = {http://dx.doi.org/10.1016/0304-3975(92)90014-7},
  acmid      = {136297},
  address    = {Essex, UK},
  issue_date = {14 Sept. 1992},
  numpages   = {37},
  publisher  = {Elsevier Science Publishers Ltd.},
}

@Article{Moura2009,
  Title                    = {Revisiting Coroutines},
  Author                   = {Moura, Ana L\'{u}cia De and Ierusalimschy, Roberto},
  Journal                  = {ACM Trans. Program. Lang. Syst.},
  Year                     = {2009},
  Month                    = feb,
  Number                   = {2},
  Pages                    = {6:1--6:31},
  Volume                   = {31},
  Acmid                    = {1462167},
  Address                  = {New York, NY, USA},
  Articleno                = {6},
  DOI                      = {10.1145/1462166.1462167},
  File                     = {:a6-moura.pdf:PDF},
  ISSN                     = {0164-0925},
  Issue_date               = {February 2009},
  Keywords                 = {Continuations, generators, multitasking},
  Numpages                 = {31},
  Owner                    = {ben8},
  Publisher                = {ACM},
  Timestamp                = {2016.07.19},
  URL                      = {http://doi.acm.org/10.1145/1462166.1462167}
}

@Online{Toub2012,
  author = {Stephen Toub},
  title  = {Should I expose asynchronous wrappers for synchronous methods?},
  year   = {2012},
  date   = {2012-03-24},
  url    = {https://blogs.msdn.microsoft.com/pfxteam/2012/03/24/should-i-expose-asynchronous-wrappers-for-synchronous-methods/},
  file   = {:sync_to_async.pdf:PDF},
}

@Online{Toub2012a,
  author = {Stephen Toub},
  title  = {Should I expose synchronous wrappers for asynchronous methods?},
  year   = {2012},
  date   = {2012-04-13},
  url    = {https://blogs.msdn.microsoft.com/pfxteam/2012/04/13/should-i-expose-synchronous-wrappers-for-asynchronous-methods/},
  file   = {:async_to_sync.pdf:PDF},
}

@InProceedings{Davis2017,
  author    = {Davis, James and Thekumparampil, Arun and Lee, Dongyoon},
  title     = {Node.Fz: Fuzzing the Server-Side Event-Driven Architecture},
  booktitle = {Proceedings of the Twelfth European Conference on Computer Systems},
  year      = {2017},
  series    = {EuroSys '17},
  publisher = {ACM},
  location  = {Belgrade, Serbia},
  isbn      = {978-1-4503-4938-3},
  pages     = {145--160},
  doi       = {10.1145/3064176.3064188},
  url       = {http://doi.acm.org/10.1145/3064176.3064188},
  acmid     = {3064188},
  address   = {New York, NY, USA},
  numpages  = {16},
}

@inproceedings{Hong2014,
 author = {Hong, Shin and Park, Yongbae and Kim, Moonzoo},
 title = {Detecting Concurrency Errors in Client-Side Java Script Web Applications},
 booktitle = {Proceedings of the 2014 IEEE International Conference on Software Testing, Verification, and Validation},
 series = {ICST '14},
 year = {2014},
 isbn = {978-1-4799-2255-0},
 pages = {61--70},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ICST.2014.17},
 doi = {10.1109/ICST.2014.17},
 acmid = {2624525},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {automated testing, concurrency bug, Java Script, web testing},
}

@inproceedings{Wang2017,
 author = {Wang, Jie and Dou, Wensheng and Gao, Yu and Gao, Chushu and Qin, Feng and Yin, Kang and Wei, Jun},
 title = {A Comprehensive Study on Real World Concurrency Bugs in Node.Js},
 booktitle = {Proceedings of the 32Nd IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE 2017},
 year = {2017},
 isbn = {978-1-5386-2684-9},
 location = {Urbana-Champaign, IL, USA},
 pages = {520--531},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=3155562.3155628},
 acmid = {3155628},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {JavaScript, Node.js, concurrency bug, empirical study, event-driven},
}

@InProceedings{Petrov2012,
  author    = {Petrov, Boris and Vechev, Martin and Sridharan, Manu and Dolby, Julian},
  title     = {Race Detection for Web Applications},
  booktitle = {Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design and Implementation},
  year      = {2012},
  series    = {PLDI '12},
  publisher = {ACM},
  location  = {Beijing, China},
  isbn      = {978-1-4503-1205-9},
  pages     = {251--262},
  doi       = {10.1145/2254064.2254095},
  url       = {http://doi.acm.org/10.1145/2254064.2254095},
  acmid     = {2254095},
  address   = {New York, NY, USA},
  keywords  = {asynchrony, concurrency, data race, non determinism, web analysis},
  numpages  = {12},
}

@InProceedings{Hsiao2014,
  author    = {Hsiao, Chun-Hung and Yu, Jie and Narayanasamy, Satish and Kong, Ziyun and Pereira, Cristiano L. and Pokam, Gilles A. and Chen, Peter M. and Flinn, Jason},
  title     = {Race Detection for Event-driven Mobile Applications},
  booktitle = {Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  year      = {2014},
  series    = {PLDI '14},
  publisher = {ACM},
  location  = {Edinburgh, United Kingdom},
  isbn      = {978-1-4503-2784-8},
  pages     = {326--336},
  doi       = {10.1145/2594291.2594330},
  url       = {http://doi.acm.org/10.1145/2594291.2594330},
  acmid     = {2594330},
  address   = {New York, NY, USA},
  keywords  = {Android, causality model, concurrency, event-driven, mobile application, race detection, use-free race},
  numpages  = {11},
}

@InProceedings{Mutlu2015,
  author    = {Mutlu, Erdal and Tasiran, Serdar and Livshits, Benjamin},
  title     = {Detecting JavaScript Races That Matter},
  booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  year      = {2015},
  series    = {ESEC/FSE 2015},
  publisher = {ACM},
  location  = {Bergamo, Italy},
  isbn      = {978-1-4503-3675-8},
  pages     = {381--392},
  doi       = {10.1145/2786805.2786820},
  url       = {http://doi.acm.org/10.1145/2786805.2786820},
  acmid     = {2786820},
  address   = {New York, NY, USA},
  keywords  = {JavaScript, asynchrony, non-determinism, race detection},
  numpages  = {12},
}

@inproceedings{Zhang2017,
 author = {Zhang, Lu and Wang, Chao},
 title = {RClassify: Classifying Race Conditions in Web Applications via Deterministic Replay},
 booktitle = {Proceedings of the 39th International Conference on Software Engineering},
 series = {ICSE '17},
 year = {2017},
 isbn = {978-1-5386-3868-2},
 location = {Buenos Aires, Argentina},
 pages = {278--288},
 numpages = {11},
 url = {https://doi.org/10.1109/ICSE.2017.33},
 doi = {10.1109/ICSE.2017.33},
 acmid = {3097402},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}

@Online{jay2013,
  author = {jay},
  title  = {Write a well designed async / non-async API},
  year   = {2013},
  howpublished = "\url{https://stackoverflow.com/questions/14870478}",
}

@Online{Gray2013,
  author = {Michael J. Gray},
  title  = {How can I implement both an async method and its synchronous counterpart?},
  year   = {2013},
  howpublished = "\url{https://stackoverflow.com/questions/19865823}",
}

@Online{Kock2014,
  author = {André Snede Kock},
  title  = {Avoid duplicate code with Async},
  year   = {2014},
  howpublished = "\url{https://stackoverflow.com/questions/23932885}",
}

@Online{Rice2015,
  author = {CharlesNRice},
  title  = {Pattern for writing synchronous and asynchronous methods in libraries and keeping it DRY},
  year   = {2015},
  howpublished = "\url{https://stackoverflow.com/questions/27971156}",
}

@Online{ceco2015,
  author = {ceco},
  title  = {Using async await when implementing a library with both synchronous and asynchronous API for the same functionality},
  year   = {2015},
  howpublished = "\url{https://stackoverflow.com/questions/27862483}",
}

@InProceedings{Moore2008,
  author    = {Moore, Katherine F. and Grossman, Dan},
  title     = {High-level Small-step Operational Semantics for Transactions},
  booktitle = {Proceedings of the 35th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  year      = {2008},
  series    = {POPL '08},
  publisher = {ACM},
  location  = {San Francisco, California, USA},
  isbn      = {978-1-59593-689-9},
  pages     = {51--62},
  doi       = {10.1145/1328438.1328448},
  url       = {http://doi.acm.org/10.1145/1328438.1328448},
  acmid     = {1328448},
  address   = {New York, NY, USA},
  file      = {:ActualPapers/p51-moore.pdf:PDF},
  keywords  = {isolation, operational semantics, parallelism, strong atomicity, transactional memory, weak atomicity},
  numpages  = {12},
}

@Online{Spolsky2008,
  Title                    = {Stack Overflow},
  Author                   = {Joel Spolsky and Jeff Atwood},
  url = {http://stackoverflow.com/},
  Month                    = {April},
  Year                     = {2008},
}

@Article{Shao2000,
  Title                    = {Efficient and Safe-for-space Closure Conversion},
  Author                   = {Shao, Zhong and Appel, Andrew W.},
  Journal                  = {ACM Trans. Program. Lang. Syst.},
  Year                     = {2000},
  Month                    = jan,
  Number                   = {1},
  Pages                    = {129--161},
  Volume                   = {22},
  Acmid                    = {345125},
  Address                  = {New York, NY, USA},
  DOI                      = {10.1145/345099.345125},
  File                     = {:escc.pdf:PDF},
  ISSN                     = {0164-0925},
  Issue_date               = {Jan. 2000},
  Keywords                 = {callee-save registers, closure conversion, closure representation, compiler optimization, flow analysis, heap-based compilation, space safety},
  Numpages                 = {33},
  Owner                    = {ben8},
  Publisher                = {ACM},
  Timestamp                = {2014.08.19},
  URL                      = {http://doi.acm.org/10.1145/345099.345125}
}

@Online{Anderson2013,
  Title                    = {Abandoning segmented stacks in Rust},
  Author                   = {Brian Anderson},
  url = {https://mail.mozilla.org/pipermail/rust-dev/2013-November/006314.html},
  HowPublished             = {rust-dev mailing list},
  Month                    = {November},
  Year                     = {2013},
}

@misc{Anastasopoulos2014,
author = {Agis Anastasopoulos},
title = {Contiguous stacks in Go},
journal = {agis.io},
type = {Blog},
number = {2014/03/25},
year = {2014},
howpublished = {\url{http://agis.io/2014/03/25/contiguous-stacks-in-go.html}}
}

@misc{Cheney2014,
author = {Dave Cheney},
title = {Five things that make Go fast},
journal = {The acme of foolishness},
type = {Blog},
number = {2014/6/7},
year = {2014},
howpublished = {\url{https://dave.cheney.net/2014/06/07/five-things-that-make-go-fast}}
}

@misc{Morsing2014,
author = {Daniel Morsing},
title = {How Stacks are Handled in Go},
journal = {Cloudflare Blog},
type = {Blog},
number = {2014/09/15},
year = {2014},
howpublished = {\url{https://blog.cloudflare.com/how-stacks-are-handled-in-go/}}
}

