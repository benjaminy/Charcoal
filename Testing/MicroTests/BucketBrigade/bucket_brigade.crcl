#define N 10

int main( int argc, char **argv )
{
    semaphore_t sems[N];
    activity_t *activities = (activity_t *)malloc( N * sizeof( activities[0] ) );
    if( !activities )
        return ENOMEM;
    int i, m = ( argc > 1 ) ? (int)atol( argv[1] ) : N;

    for( i = 0; i < N; ++i )
    {
        semaphore_open( &sems[i], 0 );
    }
    for( i = 0; i < N; ++i )
    {
        activate{ &activities[i] }( i )
        {
            int j;
            for( j = 0; j < m; ++j )
            {
                semaphore_decr( &sems[ i ] );
                semaphore_incr( &sems[ ( i + 1 ) % N ] );
            }
        }
    }
    semaphore_incr( &sems[0] );
    activity_wait( &activities[ N - 1 ] );
    for( i = 0; i < N; ++i )
    {
        semaphore_close( &sems[i] );
    }
    free( activities );
    return 0;
}
