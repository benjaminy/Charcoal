extern "C" {
#include <stdlib.h>
#include <stdio.h>
#include <assert.h>
}

#include <standard_library.crclh>

csemaphore_t sem;

int main( int argc, char ** argv )
{
    long long base = 0, limit, i;
    if( argc > 1 )
    {
        if( sscanf( argv[1], "%lli", &base ) !=1 )
        {
            printf( "error - No base given" );
            base = 0;
        }
    }
    semaphore_open( &sem, 0 );
    for( limit = 1; limit < 100000000000; limit *= 2 )
    {
        long long actual_limit = base + limit;
        printf( "Lets try spawning %lld activities\n", actual_limit ); fflush( stdout );
        activity_p acts = (activity_p)malloc( actual_limit * sizeof( acts[0] ) );
        for( i = 0; i < actual_limit; ++i )
        {
            activate[ &acts[i] ] ()
            {
                semaphore_decr( &sem );
            }
        }
        for( i = 0; i < actual_limit; ++i )
        {
            semaphore_incr( &sem );
        }
        for( i = 0; i < actual_limit; ++i )
        {
            wait_activity_done( &acts[ i ] );
        }
        free( acts );
    }
}
